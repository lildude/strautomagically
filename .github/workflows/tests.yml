name: Test, Build and Deploy

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - main

jobs:
  build:
    name: Test & build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version-file: 'go.mod'
        cache: true

    - name: Unit tests
      run: make test

    - name: Code coverage
      run: make coverage

    - name: Lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        skip-cache: true

    - name: Build
      if: github.ref == 'refs/heads/main'
      run: make build_azure

    - name: Upload
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v3
      with:
        name: app
        path: |
          strautomagically
          templates/weather.tmpl

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
    - name: Download
      uses: actions/download-artifact@v3
      with:
        name: app

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_RBAC_CREDENTIALS }}

    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ secrets.FUNCTION_APP }}
        package: ${{ github.workspace }}
        respect-funcignore: true

    - name: 'Check deploy'
      run: |
        i=0
        while [ $i -le 10 ]; do
          sleep 10
          RESPONSE=$(curl -sv "${{ steps.fa.outputs.app-url }}/start" 2>&1 | grep Strautomagically-Version | cut -d' ' -f3)
          if [ "${RESPONSE//[$'\t\r\n']}" = "${GITHUB_SHA}" ]; then
            exit 0
          fi
          i=$((i+1))
        done
        echo "Failed to deploy."
        echo -e "Exp: ${GITHUB_SHA}\nGot: ${RESPONSE//[$'\t\r\n']}."
        exit 1
